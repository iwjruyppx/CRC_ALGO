###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.4.12462/W32 for ARM       20/Mar/2018  15:00:05
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\Users\Paul\Desktop\simulation\CRC_ALGO\CRC.c
#    Command line =  
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\CRC.c -D
#        USE_STDPERIPH_DRIVER -D VECT_TAB_FLASH -D USE_STM32F4_EVB -D STM32F4XX
#        -D STM32F401X -D AKM_MAGNETOMETER_AK09911 -D AKSC_VERSION_DEVICE=9911
#        -D AKL_SKIP_HW_CHECK -D DEBUG -D AKM_DISABLE_DOEPLUS -D
#        AKM_CUSTOM_CONTINUOUS_MEASURE -D __DOEAG_MODE_EN -D ACC_SENSOR_DISABLE
#        -D AKM_ACCELEROMETER_DUMMY -D AKM_ENABLE_PDC -lC
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\STM32F4\List -lA
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\STM32F4\List
#        --diag_suppress Pa082,pe191 -o
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\STM32F4\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e
#        --fpu=VFPv4_sp --dlib_config "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h" -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\Libraries\STM32_Common\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\Libraries\STM32F4xx_HAL_Driver\inc\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\Libraries\CMSIS\Device\STM32F4xx\Include\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\..\FreeRTOS\FreeRTOS821\Source\include\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\..\FreeRTOS\FreeRTOS821\Source\portable\IAR\ARM_CM4F\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\Libraries\STM32_CPAL_Driver\inc\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\Libraries\STM32_CPAL_Driver\devices\stm32f4xx\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\..\System\Algorithm\inc\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\..\System\Driver\inc\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\..\System\DriverLibrary\AKM8963\inc\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\..\System\DriverLibrary\AKM09911\inc\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\..\System\DriverLibrary\AKM09911AG\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\..\System\DriverLibrary\AKM09911AG\AKM_HAL\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\..\System\DriverLibrary\AKM09911AG\AKM_Library\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\..\System\DriverLibrary\AKM09911AG\AKM_Library\libag\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\..\System\DriverLibrary\AKM09911AG\AKM_Library\libSmartCompass\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\..\System\DriverLibrary\AKM09911AG\AKM_Sensors\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\..\System\DriverLibrary\MMC3524xPJ\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\..\System\DriverLibrary\ST480M\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\..\System\DriverLibrary\Yamaha\inc\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\..\System\DriverLibrary\YamahaMini\inc\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\..\System\Manager\inc\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\..\System\Utils\inc\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\Release\Driver\inc\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\Release\Manager\inc\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\Release\Platform\inc\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\Release\RtosTask\inc\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\Release\System\inc\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\Release\SystemConfig\inc\
#        -I
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\..\..\Source\inc\
#        -I C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\..\..\..\ -I
#        C:\work\Develop\Source\Manager\ -I C:\work\Develop\Source\Common\ -I
#        C:\work\Develop\Source\Platform_Dependent\ -I
#        C:\work\Develop\Source\Android\ -I C:\work\Develop\Source\TimeSync\ -I
#        C:\work\Develop\Source\Protocol\ -Ol --vla --use_c++_inline -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    Locale       =  Chinese (Traditional)_Taiwan.950
#    List file    =  
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\STM32F4\List\CRC.lst
#    Object file  =  
#        C:\Users\Paul\Desktop\simulation\CRC_ALGO\EWARM6\STM32F4\Obj\CRC.o
#
###############################################################################

C:\Users\Paul\Desktop\simulation\CRC_ALGO\CRC.c
      1          #include <stdio.h>
      2          #include <stdlib.h>
      3          #include <stdint.h>
      4          #include <stdbool.h>
      5          #include <stddef.h>
      6          #include <string.h>
      7          
      8          #include "CRC.h"
      9          /*
     10             CCITT-32:   0x04C11DB7  =  x32 + x26 +  x23 + x22 + x16 + x12 +
     11                                        x11 + x10 + x8 + x7 + x5 + x4 + x2 + x + 1
     12             CRC-16:     0x8005      =  x16 + x15 + x2 + 1
     13          
     14             CRC-CCITT:  0x1021      =  x16 + x12 + x5 + 1
     15          
     16             CRC-XMODEM: 0x8408      =  x16 + x15 + x10 + x3
     17          
     18             12bit-CRC:  0x80f       =  x12 + x11 + x3 + x2 + x + 1
     19          
     20             10bit-CRC:  0x233       =  x10 + x9  + x5  + x4  + x  + 1
     21          
     22             8bit-CRC:   0x07        =  x8  + x2  + x + 1
     23          
     24          */
     25          
     26          #define CRC_XModem    0x0000
     27          #define CRC_VALUE_FFFF    0xFFFF
     28          #define CRC_VALUE_1D0F    0x1D0F
     29          
     30          #define INITIAL_VALUE CRC_VALUE_FFFF
     31          
     32          

   \                                 In section .text, align 2, keep-with-next
     33          uint32_t CRC16_CCITT_LOW_SPEED(uint8_t *ptr, uint8_t len) 
     34          {
   \                     CRC16_CCITT_LOW_SPEED: (+1)
   \   00000000   0xB410             PUSH     {R4}
     35              uint8_t i;
     36              uint32_t crc = INITIAL_VALUE;
   \   00000002   0xF64F 0x72FF      MOVW     R2,#+65535
   \   00000006   0xE000             B.N      ??CRC16_CCITT_LOW_SPEED_0
     37              while(len--!=0) {
     38                  for(i=0x80; i!=0; i/=2) {
     39                      if((crc&0x8000)!=0) {crc*=2; crc^=0x1021;}
     40                      else crc*=2;
     41                      if((*ptr&i)!=0) crc^=0x1021;
     42                  }
     43                  ptr++;
   \                     ??CRC16_CCITT_LOW_SPEED_1: (+1)
   \   00000008   0x1C40             ADDS     R0,R0,#+1
   \                     ??CRC16_CCITT_LOW_SPEED_0: (+1)
   \   0000000A   0x000B             MOVS     R3,R1
   \   0000000C   0x1E59             SUBS     R1,R3,#+1
   \   0000000E   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000010   0x2B00             CMP      R3,#+0
   \   00000012   0xD018             BEQ.N    ??CRC16_CCITT_LOW_SPEED_2
   \   00000014   0x2380             MOVS     R3,#+128
   \   00000016   0xE00B             B.N      ??CRC16_CCITT_LOW_SPEED_3
   \                     ??CRC16_CCITT_LOW_SPEED_4: (+1)
   \   00000018   0x0052             LSLS     R2,R2,#+1
   \                     ??CRC16_CCITT_LOW_SPEED_5: (+1)
   \   0000001A   0x7804             LDRB     R4,[R0, #+0]
   \   0000001C   0x421C             TST      R4,R3
   \   0000001E   0xD003             BEQ.N    ??CRC16_CCITT_LOW_SPEED_6
   \   00000020   0xF482 0x5280      EOR      R2,R2,#0x1000
   \   00000024   0xF092 0x0221      EORS     R2,R2,#0x21
   \                     ??CRC16_CCITT_LOW_SPEED_6: (+1)
   \   00000028   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000002A   0x2402             MOVS     R4,#+2
   \   0000002C   0xFB93 0xF3F4      SDIV     R3,R3,R4
   \                     ??CRC16_CCITT_LOW_SPEED_3: (+1)
   \   00000030   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000032   0x2B00             CMP      R3,#+0
   \   00000034   0xD0E8             BEQ.N    ??CRC16_CCITT_LOW_SPEED_1
   \   00000036   0x0414             LSLS     R4,R2,#+16
   \   00000038   0xD5EE             BPL.N    ??CRC16_CCITT_LOW_SPEED_4
   \   0000003A   0x0052             LSLS     R2,R2,#+1
   \   0000003C   0xF482 0x5280      EOR      R2,R2,#0x1000
   \   00000040   0xF092 0x0221      EORS     R2,R2,#0x21
   \   00000044   0xE7E9             B.N      ??CRC16_CCITT_LOW_SPEED_5
     44              }
     45              return(crc);
   \                     ??CRC16_CCITT_LOW_SPEED_2: (+1)
   \   00000046   0x0010             MOVS     R0,R2
   \   00000048   0xBC10             POP      {R4}
   \   0000004A   0x4770             BX       LR               ;; return
     46          }
     47          

   \                                 In section .text, align 2, keep-with-next
     48          uint32_t CRC16_CCITT_MIDDLE_SPEED(uint8_t *ptr, int len) 
     49          {
   \                     CRC16_CCITT_MIDDLE_SPEED: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB090             SUB      SP,SP,#+64
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
     50              uint32_t crc = INITIAL_VALUE;
   \   00000008   0xF64F 0x76FF      MOVW     R6,#+65535
     51              uint8_t da;
     52              uint32_t crc_ta[16]={
     53                  0x0000,0x1021,0x2042,0x3063,0x4084,0x50a5,0x60c6,0x70e7,
     54                  0x8108,0x9129,0xa14a,0xb16b,0xc18c,0xd1ad,0xe1ce,0xf1ef,
     55              };
   \   0000000C   0x4668             MOV      R0,SP
   \   0000000E   0x....             LDR.N    R1,??DataTable1
   \   00000010   0x2240             MOVS     R2,#+64
   \   00000012   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000016   0xE01F             B.N      ??CRC16_CCITT_MIDDLE_SPEED_0
     56              while(len--!=0) {
     57                  da=((uint8_t)(crc/256))/16; 
   \                     ??CRC16_CCITT_MIDDLE_SPEED_1: (+1)
   \   00000018   0x0A30             LSRS     R0,R6,#+8
   \   0000001A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001C   0x2110             MOVS     R1,#+16
   \   0000001E   0xFB90 0xF0F1      SDIV     R0,R0,R1
     58                  crc<<=4; 
   \   00000022   0x0136             LSLS     R6,R6,#+4
     59                  crc^=crc_ta[da^(*ptr/16)]; 
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x7821             LDRB     R1,[R4, #+0]
   \   00000028   0x2210             MOVS     R2,#+16
   \   0000002A   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   0000002E   0x4048             EORS     R0,R1,R0
   \   00000030   0x4669             MOV      R1,SP
   \   00000032   0xF851 0x0020      LDR      R0,[R1, R0, LSL #+2]
   \   00000036   0x4046             EORS     R6,R0,R6
     60                  da=((uint8_t)(crc/256))/16; 
   \   00000038   0x0A30             LSRS     R0,R6,#+8
   \   0000003A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003C   0x2110             MOVS     R1,#+16
   \   0000003E   0xFB90 0xF0F1      SDIV     R0,R0,R1
     61                  crc<<=4;
   \   00000042   0x0136             LSLS     R6,R6,#+4
     62                  crc^=crc_ta[da^(*ptr&0x0f)]; 
   \   00000044   0x4669             MOV      R1,SP
   \   00000046   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000048   0x7822             LDRB     R2,[R4, #+0]
   \   0000004A   0xF012 0x020F      ANDS     R2,R2,#0xF
   \   0000004E   0x4050             EORS     R0,R2,R0
   \   00000050   0xF851 0x0020      LDR      R0,[R1, R0, LSL #+2]
   \   00000054   0x4046             EORS     R6,R0,R6
     63                  ptr++;
   \   00000056   0x1C64             ADDS     R4,R4,#+1
     64              }
   \                     ??CRC16_CCITT_MIDDLE_SPEED_0: (+1)
   \   00000058   0x0028             MOVS     R0,R5
   \   0000005A   0x1E45             SUBS     R5,R0,#+1
   \   0000005C   0x2800             CMP      R0,#+0
   \   0000005E   0xD1DB             BNE.N    ??CRC16_CCITT_MIDDLE_SPEED_1
     65              return(crc);
   \   00000060   0x0030             MOVS     R0,R6
   \   00000062   0xB010             ADD      SP,SP,#+64
   \   00000064   0xBD70             POP      {R4-R6,PC}       ;; return
     66          }
     67          

   \                                 In section .text, align 2, keep-with-next
     68          uint32_t CRC16_CCITT_HIGH_SPEED(uint8_t *ptr, uint8_t len) 
     69          {
   \                     CRC16_CCITT_HIGH_SPEED: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xF5AD 0x6D80      SUB      SP,SP,#+1024
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
     70              uint32_t crc = INITIAL_VALUE;
   \   0000000A   0xF64F 0x76FF      MOVW     R6,#+65535
     71              uint8_t da;
     72              uint32_t crc_ta[256]={
     73                  0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50a5, 0x60c6, 0x70e7,
     74                  0x8108, 0x9129, 0xa14a, 0xb16b, 0xc18c, 0xd1ad, 0xe1ce, 0xf1ef,
     75                  0x1231, 0x0210, 0x3273, 0x2252, 0x52b5, 0x4294, 0x72f7, 0x62d6,
     76                  0x9339, 0x8318, 0xb37b, 0xa35a, 0xd3bd, 0xc39c, 0xf3ff, 0xe3de,
     77                  0x2462, 0x3443, 0x0420, 0x1401, 0x64e6, 0x74c7, 0x44a4, 0x5485,
     78                  0xa56a, 0xb54b, 0x8528, 0x9509, 0xe5ee, 0xf5cf, 0xc5ac, 0xd58d,
     79                  0x3653, 0x2672, 0x1611, 0x0630, 0x76d7, 0x66f6, 0x5695, 0x46b4,
     80                  0xb75b, 0xa77a, 0x9719, 0x8738, 0xf7df, 0xe7fe, 0xd79d, 0xc7bc,
     81                  0x48c4, 0x58e5, 0x6886, 0x78a7, 0x0840, 0x1861, 0x2802, 0x3823,
     82                  0xc9cc, 0xd9ed, 0xe98e, 0xf9af, 0x8948, 0x9969, 0xa90a, 0xb92b,
     83                  0x5af5, 0x4ad4, 0x7ab7, 0x6a96, 0x1a71, 0x0a50, 0x3a33, 0x2a12,
     84                  0xdbfd, 0xcbdc, 0xfbbf, 0xeb9e, 0x9b79, 0x8b58, 0xbb3b, 0xab1a,
     85                  0x6ca6, 0x7c87, 0x4ce4, 0x5cc5, 0x2c22, 0x3c03, 0x0c60, 0x1c41,
     86                  0xedae, 0xfd8f, 0xcdec, 0xddcd, 0xad2a, 0xbd0b, 0x8d68, 0x9d49,
     87                  0x7e97, 0x6eb6, 0x5ed5, 0x4ef4, 0x3e13, 0x2e32, 0x1e51, 0x0e70,
     88                  0xff9f, 0xefbe, 0xdfdd, 0xcffc, 0xbf1b, 0xaf3a, 0x9f59, 0x8f78,
     89                  0x9188, 0x81a9, 0xb1ca, 0xa1eb, 0xd10c, 0xc12d, 0xf14e, 0xe16f,
     90                  0x1080, 0x00a1, 0x30c2, 0x20e3, 0x5004, 0x4025, 0x7046, 0x6067,
     91                  0x83b9, 0x9398, 0xa3fb, 0xb3da, 0xc33d, 0xd31c, 0xe37f, 0xf35e,
     92                  0x02b1, 0x1290, 0x22f3, 0x32d2, 0x4235, 0x5214, 0x6277, 0x7256,
     93                  0xb5ea, 0xa5cb, 0x95a8, 0x8589, 0xf56e, 0xe54f, 0xd52c, 0xc50d,
     94                  0x34e2, 0x24c3, 0x14a0, 0x0481, 0x7466, 0x6447, 0x5424, 0x4405,
     95                  0xa7db, 0xb7fa, 0x8799, 0x97b8, 0xe75f, 0xf77e, 0xc71d, 0xd73c,
     96                  0x26d3, 0x36f2, 0x0691, 0x16b0, 0x6657, 0x7676, 0x4615, 0x5634,
     97                  0xd94c, 0xc96d, 0xf90e, 0xe92f, 0x99c8, 0x89e9, 0xb98a, 0xa9ab,
     98                  0x5844, 0x4865, 0x7806, 0x6827, 0x18c0, 0x08e1, 0x3882, 0x28a3,
     99                  0xcb7d, 0xdb5c, 0xeb3f, 0xfb1e, 0x8bf9, 0x9bd8, 0xabbb, 0xbb9a,
    100                  0x4a75, 0x5a54, 0x6a37, 0x7a16, 0x0af1, 0x1ad0, 0x2ab3, 0x3a92,
    101                  0xfd2e, 0xed0f, 0xdd6c, 0xcd4d, 0xbdaa, 0xad8b, 0x9de8, 0x8dc9,
    102                  0x7c26, 0x6c07, 0x5c64, 0x4c45, 0x3ca2, 0x2c83, 0x1ce0, 0x0cc1,
    103                  0xef1f, 0xff3e, 0xcf5d, 0xdf7c, 0xaf9b, 0xbfba, 0x8fd9, 0x9ff8,
    104                  0x6e17, 0x7e36, 0x4e55, 0x5e74, 0x2e93, 0x3eb2, 0x0ed1, 0x1ef0
    105              };
   \   0000000E   0x4668             MOV      R0,SP
   \   00000010   0x....             LDR.N    R1,??DataTable1_1
   \   00000012   0xF44F 0x6280      MOV      R2,#+1024
   \   00000016   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000001A   0xE009             B.N      ??CRC16_CCITT_HIGH_SPEED_0
    106              
    107              while(len--!=0) {
    108                  da=(uint8_t) (crc/256);
   \                     ??CRC16_CCITT_HIGH_SPEED_1: (+1)
   \   0000001C   0x0A30             LSRS     R0,R6,#+8
    109                  crc<<=8;
   \   0000001E   0x0236             LSLS     R6,R6,#+8
    110                  crc^=crc_ta[da^*ptr];
   \   00000020   0x4669             MOV      R1,SP
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0x7822             LDRB     R2,[R4, #+0]
   \   00000026   0x4050             EORS     R0,R2,R0
   \   00000028   0xF851 0x0020      LDR      R0,[R1, R0, LSL #+2]
   \   0000002C   0x4046             EORS     R6,R0,R6
    111                  ptr++;
   \   0000002E   0x1C64             ADDS     R4,R4,#+1
    112              }
   \                     ??CRC16_CCITT_HIGH_SPEED_0: (+1)
   \   00000030   0x0028             MOVS     R0,R5
   \   00000032   0x1E45             SUBS     R5,R0,#+1
   \   00000034   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000036   0x2800             CMP      R0,#+0
   \   00000038   0xD1F0             BNE.N    ??CRC16_CCITT_HIGH_SPEED_1
    113              return(crc);
   \   0000003A   0x0030             MOVS     R0,R6
   \   0000003C   0xF50D 0x6D80      ADD      SP,SP,#+1024
   \   00000040   0xBD70             POP      {R4-R6,PC}       ;; return
    114          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x00000000         DC32 0, 4129, 8258, 12387, 16516, 20645, 24774, 28903, 33032, 37161
   \              0x00001021   
   \              0x00002042   
   \              0x00003063   
   \              0x00004084   
   \              0x000050A5   
   \              0x000060C6   
   \              0x000070E7   
   \              0x00008108   
   \              0x00009129   
   \   00000028   0x0000A14A         DC32 41290, 45419, 49548, 53677, 57806, 61935
   \              0x0000B16B   
   \              0x0000C18C   
   \              0x0000D1AD   
   \              0x0000E1CE   
   \              0x0000F1EF   

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x00000000         DC32 0, 4129, 8258, 12387, 16516, 20645, 24774, 28903, 33032, 37161
   \              0x00001021   
   \              0x00002042   
   \              0x00003063   
   \              0x00004084   
   \              0x000050A5   
   \              0x000060C6   
   \              0x000070E7   
   \              0x00008108   
   \              0x00009129   
   \   00000028   0x0000A14A         DC32 41290, 45419, 49548, 53677, 57806, 61935, 4657, 528, 12915, 8786
   \              0x0000B16B   
   \              0x0000C18C   
   \              0x0000D1AD   
   \              0x0000E1CE   
   \              0x0000F1EF   
   \              0x00001231   
   \              0x00000210   
   \              0x00003273   
   \              0x00002252   
   \   00000050   0x000052B5         DC32 21173, 17044, 29431, 25302, 37689, 33560, 45947, 41818, 54205
   \              0x00004294   
   \              0x000072F7   
   \              0x000062D6   
   \              0x00009339   
   \              0x00008318   
   \              0x0000B37B   
   \              0x0000A35A   
   \              0x0000D3BD   
   \   00000074   0x0000C39C         DC32 50076, 62463, 58334, 9314, 13379, 1056, 5121, 25830, 29895, 17572
   \              0x0000F3FF   
   \              0x0000E3DE   
   \              0x00002462   
   \              0x00003443   
   \              0x00000420   
   \              0x00001401   
   \              0x000064E6   
   \              0x000074C7   
   \              0x000044A4   
   \   0000009C   0x00005485         DC32 21637, 42346, 46411, 34088, 38153, 58862, 62927, 50604, 54669
   \              0x0000A56A   
   \              0x0000B54B   
   \              0x00008528   
   \              0x00009509   
   \              0x0000E5EE   
   \              0x0000F5CF   
   \              0x0000C5AC   
   \              0x0000D58D   
   \   000000C0   0x00003653         DC32 13907, 9842, 5649, 1584, 30423, 26358, 22165, 18100, 46939, 42874
   \              0x00002672   
   \              0x00001611   
   \              0x00000630   
   \              0x000076D7   
   \              0x000066F6   
   \              0x00005695   
   \              0x000046B4   
   \              0x0000B75B   
   \              0x0000A77A   
   \   000000E8   0x00009719         DC32 38681, 34616, 63455, 59390, 55197, 51132, 18628, 22757, 26758
   \              0x00008738   
   \              0x0000F7DF   
   \              0x0000E7FE   
   \              0x0000D79D   
   \              0x0000C7BC   
   \              0x000048C4   
   \              0x000058E5   
   \              0x00006886   
   \   0000010C   0x000078A7         DC32 30887, 2112, 6241, 10242, 14371, 51660, 55789, 59790, 63919, 35144
   \              0x00000840   
   \              0x00001861   
   \              0x00002802   
   \              0x00003823   
   \              0x0000C9CC   
   \              0x0000D9ED   
   \              0x0000E98E   
   \              0x0000F9AF   
   \              0x00008948   
   \   00000134   0x00009969         DC32 39273, 43274, 47403, 23285, 19156, 31415, 27286, 6769, 2640, 14899
   \              0x0000A90A   
   \              0x0000B92B   
   \              0x00005AF5   
   \              0x00004AD4   
   \              0x00007AB7   
   \              0x00006A96   
   \              0x00001A71   
   \              0x00000A50   
   \              0x00003A33   
   \   0000015C   0x00002A12         DC32 10770, 56317, 52188, 64447, 60318, 39801, 35672, 47931, 43802
   \              0x0000DBFD   
   \              0x0000CBDC   
   \              0x0000FBBF   
   \              0x0000EB9E   
   \              0x00009B79   
   \              0x00008B58   
   \              0x0000BB3B   
   \              0x0000AB1A   
   \   00000180   0x00006CA6         DC32 27814, 31879, 19684, 23749, 11298, 15363, 3168, 7233, 60846, 64911
   \              0x00007C87   
   \              0x00004CE4   
   \              0x00005CC5   
   \              0x00002C22   
   \              0x00003C03   
   \              0x00000C60   
   \              0x00001C41   
   \              0x0000EDAE   
   \              0x0000FD8F   
   \   000001A8   0x0000CDEC         DC32 52716, 56781, 44330, 48395, 36200, 40265, 32407, 28342, 24277
   \              0x0000DDCD   
   \              0x0000AD2A   
   \              0x0000BD0B   
   \              0x00008D68   
   \              0x00009D49   
   \              0x00007E97   
   \              0x00006EB6   
   \              0x00005ED5   
   \   000001CC   0x00004EF4         DC32 20212, 15891, 11826, 7761, 3696, 65439, 61374, 57309, 53244, 48923
   \              0x00003E13   
   \              0x00002E32   
   \              0x00001E51   
   \              0x00000E70   
   \              0x0000FF9F   
   \              0x0000EFBE   
   \              0x0000DFDD   
   \              0x0000CFFC   
   \              0x0000BF1B   
   \   000001F4   0x0000AF3A         DC32 44858, 40793, 36728, 37256, 33193, 45514, 41451, 53516, 49453
   \              0x00009F59   
   \              0x00008F78   
   \              0x00009188   
   \              0x000081A9   
   \              0x0000B1CA   
   \              0x0000A1EB   
   \              0x0000D10C   
   \              0x0000C12D   
   \   00000218   0x0000F14E         DC32 61774, 57711, 4224, 161, 12482, 8419, 20484, 16421, 28742, 24679
   \              0x0000E16F   
   \              0x00001080   
   \              0x000000A1   
   \              0x000030C2   
   \              0x000020E3   
   \              0x00005004   
   \              0x00004025   
   \              0x00007046   
   \              0x00006067   
   \   00000240   0x000083B9         DC32 33721, 37784, 41979, 46042, 49981, 54044, 58239, 62302, 689, 4752
   \              0x00009398   
   \              0x0000A3FB   
   \              0x0000B3DA   
   \              0x0000C33D   
   \              0x0000D31C   
   \              0x0000E37F   
   \              0x0000F35E   
   \              0x000002B1   
   \              0x00001290   
   \   00000268   0x000022F3         DC32 8947, 13010, 16949, 21012, 25207, 29270, 46570, 42443, 38312
   \              0x000032D2   
   \              0x00004235   
   \              0x00005214   
   \              0x00006277   
   \              0x00007256   
   \              0x0000B5EA   
   \              0x0000A5CB   
   \              0x000095A8   
   \   0000028C   0x00008589         DC32 34185, 62830, 58703, 54572, 50445, 13538, 9411, 5280, 1153, 29798
   \              0x0000F56E   
   \              0x0000E54F   
   \              0x0000D52C   
   \              0x0000C50D   
   \              0x000034E2   
   \              0x000024C3   
   \              0x000014A0   
   \              0x00000481   
   \              0x00007466   
   \   000002B4   0x00006447         DC32 25671, 21540, 17413, 42971, 47098, 34713, 38840, 59231, 63358
   \              0x00005424   
   \              0x00004405   
   \              0x0000A7DB   
   \              0x0000B7FA   
   \              0x00008799   
   \              0x000097B8   
   \              0x0000E75F   
   \              0x0000F77E   
   \   000002D8   0x0000C71D         DC32 50973, 55100, 9939, 14066, 1681, 5808, 26199, 30326, 17941, 22068
   \              0x0000D73C   
   \              0x000026D3   
   \              0x000036F2   
   \              0x00000691   
   \              0x000016B0   
   \              0x00006657   
   \              0x00007676   
   \              0x00004615   
   \              0x00005634   
   \   00000300   0x0000D94C         DC32 55628, 51565, 63758, 59695, 39368, 35305, 47498, 43435, 22596
   \              0x0000C96D   
   \              0x0000F90E   
   \              0x0000E92F   
   \              0x000099C8   
   \              0x000089E9   
   \              0x0000B98A   
   \              0x0000A9AB   
   \              0x00005844   
   \   00000324   0x00004865         DC32 18533, 30726, 26663, 6336, 2273, 14466, 10403, 52093, 56156, 60223
   \              0x00007806   
   \              0x00006827   
   \              0x000018C0   
   \              0x000008E1   
   \              0x00003882   
   \              0x000028A3   
   \              0x0000CB7D   
   \              0x0000DB5C   
   \              0x0000EB3F   
   \   0000034C   0x0000FB1E         DC32 64286, 35833, 39896, 43963, 48026, 19061, 23124, 27191, 31254
   \              0x00008BF9   
   \              0x00009BD8   
   \              0x0000ABBB   
   \              0x0000BB9A   
   \              0x00004A75   
   \              0x00005A54   
   \              0x00006A37   
   \              0x00007A16   
   \   00000370   0x00000AF1         DC32 2801, 6864, 10931, 14994, 64814, 60687, 56684, 52557, 48554, 44427
   \              0x00001AD0   
   \              0x00002AB3   
   \              0x00003A92   
   \              0x0000FD2E   
   \              0x0000ED0F   
   \              0x0000DD6C   
   \              0x0000CD4D   
   \              0x0000BDAA   
   \              0x0000AD8B   
   \   00000398   0x00009DE8         DC32 40424, 36297, 31782, 27655, 23652, 19525, 15522, 11395, 7392, 3265
   \              0x00008DC9   
   \              0x00007C26   
   \              0x00006C07   
   \              0x00005C64   
   \              0x00004C45   
   \              0x00003CA2   
   \              0x00002C83   
   \              0x00001CE0   
   \              0x00000CC1   
   \   000003C0   0x0000EF1F         DC32 61215, 65342, 53085, 57212, 44955, 49082, 36825, 40952, 28183
   \              0x0000FF3E   
   \              0x0000CF5D   
   \              0x0000DF7C   
   \              0x0000AF9B   
   \              0x0000BFBA   
   \              0x00008FD9   
   \              0x00009FF8   
   \              0x00006E17   
   \   000003E4   0x00007E36         DC32 32310, 20053, 24180, 11923, 16050, 3793, 7920
   \              0x00004E55   
   \              0x00005E74   
   \              0x00002E93   
   \              0x00003EB2   
   \              0x00000ED1   
   \              0x00001EF0   

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
    1040   CRC16_CCITT_HIGH_SPEED
      1040   -> __aeabi_memcpy4
       4   CRC16_CCITT_LOW_SPEED
      80   CRC16_CCITT_MIDDLE_SPEED
        80   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
      64  ?_0
    1024  ?_1
      66  CRC16_CCITT_HIGH_SPEED
      76  CRC16_CCITT_LOW_SPEED
     102  CRC16_CCITT_MIDDLE_SPEED

 
 1 088 bytes in section .rodata
   252 bytes in section .text
 
   252 bytes of CODE  memory
 1 088 bytes of CONST memory

Errors: none
Warnings: none
